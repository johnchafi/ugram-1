{
  "openapi": "3.0.0",
  "info": {
    "description": "API for the Ugram project (instagram-like) done as part of the GLO-3112 course at Laval University.",
    "version": "1",
    "title": "Ugram API"
  },
  "servers": [
    {
      "url": "http://ugram-team02.pm9h7ckh7u.us-east-2.elasticbeanstalk.com",
      "description": "API-URL"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "User management endpoints"
    },
    {
      "name": "pictures",
      "description": "Global pictures endpoint"
    },
    {
      "name": "user-pictures",
      "description": "User's pictures management endpoints"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "create a new user",
        "description": "",
        "operationId": "addUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Missing or bad parameter"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "list all user",
        "description": "Get all user",
        "operationId": "getAllUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of result",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserComplete"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get specific user",
        "description": "get specific user",
        "operationId": "getSpecificUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "The user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserComplete"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameter"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update logged user",
        "description": "Update given user",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "Logged user's userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Missing parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete logged user",
        "description": "Delete logged user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "Logged user's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/pictures": {
      "get": {
        "tags": [
          "pictures"
        ],
        "summary": "list all pictures",
        "description": "List all pictures by desc order",
        "operationId": "getAllPictures",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of result",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PictureComplete"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/pictures": {
      "get": {
        "tags": [
          "user-pictures"
        ],
        "summary": "list specific user pictures",
        "description": "List specific user pictures by desc order",
        "operationId": "getSpecificUserPictures",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of result",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PictureComplete"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "user-pictures"
        ],
        "summary": "create a new picture object for the logged user",
        "description": "create a new picture object for the logged user",
        "operationId": "postPicture",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "mentions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user-pictures"
        ],
        "summary": "delete all pictures for the logged user",
        "description": "delete all pictures for the logged user",
        "operationId": "deleteAllPictures",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Logged user's userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}/pictures/{pictureId}": {
      "get": {
        "tags": [
          "user-pictures"
        ],
        "summary": "get a specific picture",
        "description": "get a specific picture",
        "operationId": "getSpecificUserPicture",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pictureId",
            "in": "path",
            "description": "pictureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureComplete"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameter of unexisting picture for user"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "user-pictures"
        ],
        "summary": "update a specific picture of the logged user",
        "description": "update a specific picture of the logged user",
        "operationId": "putPicture",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Logged user's userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pictureId",
            "in": "path",
            "description": "pictureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Picture"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureComplete"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameter or unexisting picture for user"
          },
          "401": {
            "description": "No provided authentication"
          },
          "403": {
            "description": "Editing on forbidden user account for current authentication"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user-pictures"
        ],
        "summary": "delete specific pictures for the logged user",
        "description": "delete specific pictures for the logged user",
        "operationId": "deletePictures",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Logged user's userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pictureId",
            "in": "path",
            "description": "pictureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Missing parameter or unexisting picture for user"
          },
          "401": {
            "description": "No provided authentication"
          },
          "403": {
            "description": "Uploading on another user account that current authentication"
          },
          "500": {
            "description": "Unexpected error when deleting picture"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "UserComplete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pictureUrl": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "registrationDate": {
            "type": "object",
            "properties": {
              "afterNow": {
                "type": "boolean"
              },
              "beforeNow": {
                "type": "boolean"
              },
              "equalNow": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "PictureComplete": {
        "type": "object",
        "properties": {
          "createdDate": {
            "$ref": "#/components/schemas/Date"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Picture": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Date": {
        "type": "object",
        "properties": {
          "afterNow": {
            "type": "boolean"
          },
          "beforeNow": {
            "type": "boolean"
          },
          "equalNow": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "externalDocs": {
    "description": "More info here on our GitHub",
    "url": "https://github.com/GLO3112-H19/ugram-team-2/tree/master/server"
  }
}